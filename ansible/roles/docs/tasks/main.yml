---
# docs tasks
# This sets up the required infrastructure to create documentation.
# Requirements.  A develoment machine with the repository downloaded.
#  In the first instance documentation is going to be a Static html site produced by Pelican
#  which can be hosted directly in github.
#  This is experimental to start with.

- action: shell whoami
  register: whoami
  tags:
    - debug

- name: Get one green light
  debug: msg="Hi {{ whoami.stdout }}"
  tags:
    - debug

  
# Python 3 setup

- name: Install required system packages for Python 3
  action: apt pkg={{item}} state=installed update-cache=yes
  sudo: yes
  with_items:
    - python3
    - python3-dev
    - python3-setuptools

- name: Install required easy install Python 3 packages.
  action: shell easy_install3 {{ item  }}
  with_items: 
    - pip
  sudo: yes

- name: ensure virtualenv is installed
  sudo: yes
  action: shell pip install virtualenv


# Now create the virtual environment
- name: "Create virtualenv"
  shell: virtualenv --python=/usr/bin/python3.4 "/home/{{ whoami.stdout }}/.virtualenvs/{{ project_name }}_docs"
         creates="/home/{{ whoami.stdout }}/.virtualenvs/{{ project_name }}_docs/bin/activate"
  tags:
    - debug

  # Setup the virtualenvwrapper
- name: export work for virtual env wrapper
  lineinfile: dest="/home/{{ whoami.stdout }}/.profile"
    line="export WORKON_HOME=$HOME/.virtualenvs"
  tags:
    - debug

- name: enable shell script
  lineinfile: dest="/home/{{ whoami.stdout }}/.profile"
    line="source /usr/local/bin/virtualenvwrapper.sh"
  tags:
    - debug

- name: ensure required packages are installed.
  sudo: yes
  action: pip 
    requirements=/home/{{ whoami.stdout }}/projects/{{ project_name }}/requirements/docs.txt virtualenv=/home/{{ whoami.stdout }}/.virtualenvs/{{ project_name }}_docs virtualenv_command=virtualenv-3.4
  tags:
    - debug



