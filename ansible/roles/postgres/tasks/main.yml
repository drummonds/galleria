---
# create database on local machine
# Todo this needs to be abstracted with very similar code in deploy webservers

- action: shell whoami
  register: whoami
  tags:
    - debug

- name: Get one green light
  debug: msg="Hi {{ whoami.stdout }}"
  tags:
    - debug

# Maker sure postgres installed setup

- name: Install required system packages for Python 3
  action: apt pkg={{item}} state=installed update-cache=yes
  sudo: yes
  with_items:
    - postgresql
    - libpq-dev
    - python-psycopg2

- name: Check if user has been created is installed
  command: sudo -u postgres psql postgres -c"select usename from pg_shadow;"
  register: postgres_users_check
  tags:
    - debug


- name : Make sure user has been created
  command: sudo -u postgres psql postgres -c"CREATE ROLE postgres_admin WITH PASSWORD '{{ database_password }}' CREATEDB LOGIN;"
  when: postgres_users_check.stdout.find('postgres_admin') == -1
  tags:
    - debug


# TODO Duplication with Django settings which should be resolved
- name: Create a new Django database with standard name 
  postgresql_db: name={{project_name}}_db
    encoding='UTF-8'
    login_host=127.0.0.1
    port=5432
    login_user=postgres_admin
    login_password={{  database_password  }}

- name: Sync Django database.
  django_manage: >
    command=syncdb
    app_path=/home/{{ whoami.stdout }}/projects/{{ project_name }}/{{ project_name }}
    virtualenv=/home/{{ whoami.stdout }}/.virtualenvs/{{ project_name }}
    settings={{ project_name }}.settings.{{ deploy_file }}
  tags:
    - debug
    
# Django 1.7 version
#- name: migrate django database. may need to do by app
#  django_manage: >
#    command=migrate
#    app_path=/home/{{ whoami.stdout }}/projects/{{ project_name }}/{{ project_name }}
#    virtualenv=/home/{{ whoami.stdout }}/.virtualenvs/{{ project_name }}     

